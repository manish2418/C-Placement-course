//OOPS(PART I)
#include <iostream>
#include<cstring>
using namespace std;
class Hero{
    //Properties
    private :
    int health;
    public :
    char *name;
    char level;
    
    Hero(){
        cout<<"Simple constructor called"<<endl;
        name=new char[100];
    }
    // Hero(){
    //     cout<<" Constructor Called"<<endl;
    // }
    //Paramerterised Constructor
    Hero(int health){
        cout<<this<<endl;
        this -> health=health;
    }
    Hero(int health,char level){
        this->level=level;
        this->health=health;
    }
    //copy constructor
    Hero(Hero& temp){
        char *temp=new char[strlen(temp.name) + 1]
        strcpy(ch,temp.name);
        this->name=ch;
        
        this->health=temp.health;
        this->level=temp.level;
        
    }
    
    void print(){
        cout<<endl;
        cout<<"Name:"<<this->name<<" , ";
        cout<<this->health<<endl;
        cout<<this->level<<endl;
        cout<<endl;
    }
    int getHealth(){
        return health;
    }
    char getlevel(){
        return level;
    }
    void setHealth(int h){
        health=h;
    }
    void setLevel(char ch){
        level=ch;
    }
    
    void setName(char name[]){
        strcpy(this->name,name);
    }
    //Destructor
    ~Hero(){
        cout<<"Destructor bhai called"<<endl;
    }
    
};
int main() {
    
    //Static 
    Hero a;
    
    //Dynamic
    Hero *b=new Hero();
    //Manually destructor call
    delet b;
    
    
    
    
    
    
//   Hero hero1;
//   hero1.setHealth(12);
//   hero1.setLevel('D');
//   char name[7]="Google";
//   hero1.setName(name);
   
//   hero1.print();
   
//   //use deafault copy constructor
   
//   Hero hero2 (hero1);
//   hero2.print();
//   //Hero hero2=hero 1;
//     hero1.name[0]='G';
//     hero1.print();
//     hero2.print();
    
  
//   Hero suresh(70,'C');
//   suresh.print();
  
  //Copy Constructor
//   Hero R(suresh);
//   R.print();

  
//   Hero ramesh(10);
//   cout<<&ramesh<<endl;
  
  
  
    
    // cout<<"Hi"<<endl;
    // Hero ramesh;
    // cout<<"hello"<<endl;
    
    
    // //Static allocation
    // Hero a;
    // a.setHealth(80);
    // a.setLevel('B');
    // cout<<a.level;
    // cout<<a.getHealth();
    // //Dynamic allocation
    // Hero *b=new Hero;
    // b->setLevel('A');
    // b->setHealth(70);
    // // cout<<(*b).level;
    // // cout<<(*b).getHealth;
    
    //   cout<<b->level;
    //  cout<<b->getHealth();
    
    
    
    
    
   
//   //Creation of Object
//   Hero h1;
//   cout<<h1.getHealth();
//   //Use Setter
//   h1.setHealth(70);
// getHealth()
//   h1.level='A';
//   //Acessing 
//     cout<<h1.getHealth()<<endl;
//     cout<<h1.level<<endl;
// //   cout<<"size : "<<sizeof(h1)<<endl;

    return 0;
}
